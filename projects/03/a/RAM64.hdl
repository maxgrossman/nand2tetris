// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    Add16(a[0..5]=address, a[6..15]=false,
          b[0..15]=false, out=address16bit);

    Add16(a=address16bit, b=false, out=addressless8,
          out[15]=addressless8signbit);
    And(a=addressless8signbit, b=1, out=loadram0);
    RAM8(in=in, address=address[0..2],
         load=loadram0, out=outram0);

    Add16(a=addressless8, b=-8, out=addressless16);
    And(a=addressless16[15], b=1, out=loadram1);
    RAM8(in=in, address=addressless8[0..2],
         load=loadram1, out=outram1);


}
